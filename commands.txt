          命令小全书

git篇

touch READ.md ---创建文档
git init---初始化
git add READ.md ---添加文档
git commit -m "注释" ---提交到本地仓库
git remote add origin git@github.com:yourname/xxxx.git ---连接到远程仓库，并创建一个叫origin的别名
git push -u origin master ---将本地仓库的文件提交到别名为origin的地址的master分支下，-u为第一次提交，需要创建master分支，下次就不需要了
git config --local -e---修改文件
提交的命令顺序：
git add filesname	
git commit -m "注释"到本地
git pull --- 把github上得同步到本地仓库(当显示错误时执行)
git push --- 同步到github仓库上
---创建文件夹，1.在线创建：先在github上创建在框内输入“／”，然后输入文件夹名，git pull到本地
git remote rm origin ---删除当前关联的仓库
git branch -a ---查看所有分支，＊表示当前所在分支
git clone git@github.com:Ghlano/carbonized.git ---表示从该仓库下载carbonized目录（文件）到本地
git log ---查看提交日志
git reset --hard HEAD^^^ ---退回到HEAD的前第三个版本


vim篇
h ---向前移动光标
j --- 向下移动
k --- 向上移动
l ---向后移动
2h ---向前移动两列，其它类似
/hello ---向后查找关键词hello
?hello ---向前查找关键词hello
* ---向后查找当前光标出得的单词
# ---向前查找当前光标出的单词
brew cask install vim --with-lua ---保持两种版本升级vim，下载到/usr/local/bin/vim目录下
vi .zshrc ---进入配置文件添加
# If you come from bash you might have to change your $PATH.
export PATH=$HOME/bin:/usr/local/bin:$PATH
到最上面
source .zshrc ---让其生效
sudo ln -s /usr/local/bin/vim /usr/local/bin/vi ---建立一个vi的软连接
*但是会发现新版本的vim无法正常使用delete键－－只能删除当前输入*
vi ~/.vimrc ---进入.vimrc,添加set backspace=2
"*yny ---把n行代码复制到系统clipboard
"+yny ---把内容复制到系统clipboard，然后就可以在其他地方粘贴了
*在编辑代码界面，按esc后，键入:set nonu可以把行数去掉*
vim .vimrc ---更改vim的主题
cd /usr/share/vim/vim73/colors ---进入到vim自带的主题目录下
mv newcolorschemes.vim ~/.vim ---把newcolorscheme主题移到~/.vim下，然后可更改主题
git clone git@github.com:Usersname/newcolorscheme.git ---下载主题
vim .zshrc ---更改ohmyzsh主题

其它

cat /etc/shells ---查看系统下的shell
du ---查看磁盘空间状态
ps ---查看当前进程状况
mkdir ---创建目录
rmdir 删除目录
who ---查看用户名和终端类型
echo ---显示指定文件
pwd ---显示目录路径命令
cat filename ---输出文件内容到基本输出
